
override func collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {
        
        var start = 0
        for n in 0..<indexPath.section {
            start += newsParser.getArticleCountInSection(section: n)
        }
        let index = indexPath.row + start
        
        if index < newsParser.getLength() {
            //print("section: \(indexPath.section) row \(indexPath.row): \(newsParser.getTitle(index: indexPath.row+start))")
            
            if indexPath.section == 0 {
                return self.newsItemFor(indexPath: indexPath, index: index)
            }
            else if indexPath.row == 0 || indexPath.row == 1 {
                  
                return self.newsItemFor(indexPath: indexPath, index: index)
                  
                /*
                // text on left
                if indexPath.section % 2 == 0 {
                    
                
                    let cell = collectionView.dequeueReusableCell(withReuseIdentifier: ArticleCell.cellId, for: indexPath) as! ArticleCell
                    
                    cell.setupViews()
                    
                    cell.headline.text = newsParser.getTitle(index: indexPath.row+start)
                    cell.pubDate.text = newsParser.getDate(index: indexPath.row+start)
                    let imageURL = newsParser.getIMG(index: indexPath.row+start)
//                    let imgURL = URL(string: imageURL)!
                    DispatchQueue.global().async {
                        //guard let data = try? Data(contentsOf: imgURL) else { return }
                        DispatchQueue.main.async {
                            print("loading cell images")
//                            let img = UIImage(data: data)
//                            let rescaled = img?.scalePreservingAspectRatio(targetSize: CGSize(width: 190, height: 120))
                            cell.imageView.contentMode = .scaleAspectFill
                            cell.imageView.sd_setImage(with: URL(string: imageURL), placeholderImage: nil)
//                            cell.imageView.image = rescaled
                        }
                    }
                    
                    let i = indexPath.row+start
                    cell.source.lineBreakMode = .byWordWrapping
                    cell.source.text = newsParser.getSource(index: i) + " - " + newsParser.getDate(index: i)
                    cell.source.numberOfLines = 2
                    //cell.source.backgroundColor = UIColor.yellow.withAlphaComponent(0.5)
                    cell.pubDate.text = " "
                    //cell.source.text = newsParser.getSource(index: indexPath.row+start)
                    
                    if newsParser.getMarkups(index: index).count > 0 {
                        cell.markupView.isHidden = false
                    }
                    
                    cell.miniSlidersView?.setValues(val1: newsParser.getLR(index: index),
                                                val2: newsParser.getPE(index: index),
                                                source: newsParser.getSource(index: index),
                                                countryID: newsParser.getCountryID(index: index))
                                                
                    cell.miniSlidersView?.viewController = self
                    self.setFlag(imageView: cell.flag, ID: newsParser.getCountryID(index: index))
                    return cell
                }
                // text on right
                else {
                    let cell = collectionView.dequeueReusableCell(withReuseIdentifier: ArticleCellAlt.cellId, for: indexPath) as! ArticleCellAlt
                    
                    
                    cell.setupViews()
                    
                    cell.headline.text = newsParser.getTitle(index: indexPath.row+start)
                    cell.pubDate.text = newsParser.getDate(index: indexPath.row+start)
                    cell.imageView.image = nil
                    let imageURL = newsParser.getIMG(index: indexPath.row+start)
                    //let imgURL = URL(string: imageURL)!
                    DispatchQueue.global().async {
                        //guard let data = try? Data(contentsOf: imgURL) else { return }
                        DispatchQueue.main.async {
                            print("loading cell images")
//                            let img = UIImage(data: data)
//                            let rescaled = img?.scalePreservingAspectRatio(targetSize: CGSize(width: 190, height: 120))
                            cell.imageView.contentMode = .scaleAspectFill
                            cell.imageView.sd_setImage(with: URL(string: imageURL), placeholderImage: nil)
                            //cell.imageView.image = rescaled
                        }
                    }
                    
                    let i = indexPath.row+start
                    cell.source.lineBreakMode = .byWordWrapping
                    cell.source.text = newsParser.getSource(index: i) + " - " + newsParser.getDate(index: i)
                    cell.source.numberOfLines = 2
                    //cell.source.backgroundColor = UIColor.yellow.withAlphaComponent(0.5)
                    cell.pubDate.text = " "
                    //cell.source.text = newsParser.getSource(index: i)
                    
                    if newsParser.getMarkups(index: index).count > 0 {
                        cell.markupView.isHidden = false
                    }
                    
                    cell.miniSlidersView?.setValues(val1: newsParser.getLR(index: index),
                                                val2: newsParser.getPE(index: index),
                                                source: newsParser.getSource(index: index),
                                                countryID: newsParser.getCountryID(index: index))
                                        
                    cell.miniSlidersView?.viewController = self
                    self.setFlag(imageView: cell.flag, ID: newsParser.getCountryID(index: index))
                    return cell
                }
                */
               
            }
            // 2 column cells
            else {
                return self.newsItemFor(indexPath: indexPath, index: index)
            
                /*
                let cell = collectionView.dequeueReusableCell(withReuseIdentifier: ArticleCellHalf.cellId, for: indexPath) as! ArticleCellHalf

                cell.setupViews()
                
                cell.headline.text = newsParser.getTitle(index: indexPath.row+start)
                cell.pubDate.text = newsParser.getDate(index: indexPath.row+start)
                 
                let imageURL = newsParser.getIMG(index: indexPath.row+start)
               // let imgURL = URL(string: imageURL)!
                DispatchQueue.global().async {
                    //guard let data = try? Data(contentsOf: imgURL) else { return }
                    DispatchQueue.main.async {
                        print("loading cell images")
//                        let img = UIImage(data: data)
//                        let rescaled = img?.scalePreservingAspectRatio(targetSize: CGSize(width: 190, height: 120))
                        cell.imageView.contentMode = .scaleAspectFill
                        cell.imageView.sd_setImage(with: URL(string: imageURL), placeholderImage: nil)
//                        cell.imageView.image = rescaled
                    }
                }
                
                let i = indexPath.row+start
                cell.source.lineBreakMode = .byWordWrapping
                cell.source.text = newsParser.getSource(index: i) + " - " + newsParser.getDate(index: i)
                cell.source.numberOfLines = 2
                //cell.source.backgroundColor = UIColor.yellow.withAlphaComponent(0.5)
                cell.pubDate.text = " "
                
                
                
                //cell.source.text = newsParser.getSource(index: indexPath.row+start)
                
                
                if newsParser.getMarkups(index: index).count > 0 {
                    cell.markupView.isHidden = false
                }
                
                cell.miniSlidersView?.setValues(val1: newsParser.getLR(index: index),
                                                val2: newsParser.getPE(index: index),
                                                source: newsParser.getSource(index: index),
                                                countryID: newsParser.getCountryID(index: index))
                         
                cell.miniSlidersView?.viewController = self
                self.setFlag(imageView: cell.flag, ID: newsParser.getCountryID(index: index))
                cell.adjust()
                
                //cell.headline.backgroundColor = UIColor.red.withAlphaComponent(0.5)
                //cell.flag.backgroundColor = UIColor.red.withAlphaComponent(0.5)
                //cell.source.backgroundColor = UIColor.yellow.withAlphaComponent(0.5)
                
                cell.contentView.backgroundColor = .orange
                
                return cell
                */
            }
            
        }
        
        return collectionView.dequeueReusableCell(withReuseIdentifier: ArticleCell.cellId, for: indexPath) as! ArticleCell
    }
